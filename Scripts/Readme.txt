Before starting a ProteinModelerABC analysis the user should obtain a template protein structure which properly represents the MSA and align the MSA with the corresponding template sequence, removing the positions or sites of the MSA that do not show homology with the template sequence. To do so, we provide some Python scripts.

	1. To find a protein structure that properly represents the MSA we recommend the use of SWISS-MODEL (Waterhouse et al. 2018) (https://swissmodel.expasy.org). SWISS-MODEL provides a template structure by homology modeling for a maximum of 10 sequences, so if the MSA includes a higher number we recommend to use the Python script Find-ConsensusSeq.py. This script works with an input MSA in fasta format (a more common format than phylip) and returns the consensus sequence of the MSA. 
	
		python Find-ConsensusSeq.py --input MSA.fasta

	2. Next, the consensus sequence can be used to find a template in SWISS-MODEL that properly represents the MSA. Usually, the user must download the first template of the results screen, but it is recommended to check the method used to determine the structure of a protein, including X-ray crystallography, trying to avoid structures obtained with the X-ray under a resolution higher to 2 amstrongs (Å) and structures from NMR spectroscopy or electron microscopy. SCS models work with complete template sequences (no gaps) and require the MSA to have the same length as the template chain. Thus, to obtained a proper MSA to run ProteinModelerABC, the user must do some extra work. The user must align the input MSA and the template sequence with programs like MUSCLE. If the template sequence presents any gap in the MSA, the user must remove that position or site. Finally, the template sequence must be removed and the MSA has to be converted into phylip format using programs like Phylogeny.fr. Alternatively, we provided a Python script called Align.py which performs all these steps. It requires the input MSA in fasta format (--input), a template structure (--temp), the chain of the template (--chain) and the desired name of the output file, which must have the .phy extension (--output).
	
		python Align.py --input MSA.fasta --temp structure.pdb --chain A to Z --output MSA.phy
	
	3. To perform the simulations the user must provide an input phylogenetic tree or specify parameters for coalescent simulations such as the population size and a prior distribution for the substitution rate per amino acid site. We include a script called Theta.py which for a desired theta (θ) value returns the sequence identity of the MSA and the substitution rate per amino acid site, asking the ploidy of the organism and the population size. The prior distribution for the substitution rate per amino acid site should be chosen considering the query alignment sequence identity to ensure that it includes the real data. A query alignment with a low sequence identity would require a wider prior distribution.
			
		python Theta.py --input MSA.phy
